#+TITLE: Friction Pad
#+AUTHOR: Tarun Nadimpalli & Vishakh Kumar

Right now we are assuming a coefficient of .45, but that might change after thermal simulations.


| Name                    | Numerical Quantity | Units |
|-------------------------+--------------------+-------|
| Coefficient of friction |               0.45 |     1 |

#+BEGIN_SRC python :tangle frictionPad.py
from openmdao.api import ExplicitComponent
import numpy as np
class FrictionPad(ExplicitComponent):
    """Aeroshell of the pod"""
    def initialize(self):
       """Declare options"""
    
        # Need to convert this to an input at some point
        self.options.declare('Mass', 
                             default=1.,
                             types=np.ScalarType,
                             desc='Mass of the Friction Pad')
        self.options.declare('FrictionCoefficient',
                             default=0.45,
                             types=np.ScalarType,
                             desc="Coefficient of Friction for the friction pad")

    def setup(self):
        """ Define inputs and ouputs"""
        
        # Inputs
        self.add_input('NormalForce',
                       default=1.,
                       types=np.ScalarType,
                       desc="Normal Force applied to the friction pad.")

        # Outputs
        self.add_output('FrictionForce',
                        default=0.45,
                        types=np.ScalarType,
                        desc="Friction Force generated by the friction pad")

    def compute(self, inputs, outputs):
        """Compute outputs"""
        
        # Properties of the friction pad
        c_f = self.options["FrictionCoefficient"]
        
        # Force applied to the friction pad
        normal = inputs["NormalForce"]
        
        friction = c_f * normal

        outputs["FrictionForce"] = friction

    def compute_partials(self,inputs,partials):
        """Computation of partial derivatives"""
        
        c_f = self.options["FrictionCoefficient"]
        
         partials["FrictionForce","NormalForce"] = c_f
#+END_SRC
